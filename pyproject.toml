[tool.poetry]
name = "http-redirect-service"
version = "0.1.0"
description = "Simple HTTP redirect service"
authors = [
    "Yurii Karabas <1998uriyyo@gmail.com>",
]
license = "MIT"
readme = "README.md"
packages = [
    { include = "http_redirect_service" },
]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.109.0"
asgi-correlation-id = "^4.3.0"
fastapi-async-safe-dependencies = "^0.1.1"
pydantic-settings = { extras = ["dotenv"], version = "^2.1.0" }
redis = { extras = ["hiredis"], version = "^5.0.1" }
uvicorn = { extras = ["standart"], version = "^0.27.0.post1" }
loguru = "^0.7.2"
notifiers = "^1.3.3"
uvloop = "^0.19.0"
prometheus-client = "^0.19.0"

[tool.poetry.group.dev.dependencies]
pytest = "<8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pre-commit = "^3.6.0"
ruff = "^0.1.15"
mypy = "^1.8.0"
click = "^8.1.7"
httpx = "^0.26.0"

[tool.poetry.scripts]
http-redirect = "http_redirect_service.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "S", # flake8-bandit
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "COM", # flake8-commas
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TRY", # tryceratops
    "RUF", # ruff specific rules
]
ignore = [
    "B008", # do not perform function calls in argument defaults
    "RUF009", # do not perform function calls in dataclass defaults
    "COM812", # formater will handle it
    "S101", # use of assert detected
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
]
per-file-ignores = { }
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.12"
strict = true
follow_imports = "normal"

[tool.coverage.paths]
source = ["http_redirect_service"]

[tool.coverage.run]
source = ["http_redirect_service"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstractmethod",
    "@overload",
    "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
testpaths = ["tests"]